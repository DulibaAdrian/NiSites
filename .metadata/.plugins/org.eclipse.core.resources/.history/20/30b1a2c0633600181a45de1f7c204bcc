package Mapper;

import java.util.List;
import java.util.stream.Collectors;

import org.modelmapper.ModelMapper;

public class ModelMapperConfigurations {
	
	public class ModelMapConfigurations {

	    private static ModelMapper modelMapper = new ModelMapper();

	    static {
	        modelMapper = new ModelMapper();
	        modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	    }

	    private ModelMapConfigurations() {
	    }

	     public static <D, T> D map(final T entity, Class<D> outClass) {
	        return modelMapper.map(entity, outClass);
	    }

	
	    public static <D, T> List<D> mapAll(final Collection<T> entityList, Class<D> outCLass) {
	        return entityList.stream()
	                .map(entity -> map(entity, outCLass))
	                .collect(Collectors.toList());
	    }

	    public <S, D> D map(final S source, D destination) {
	        modelMapper.map(source, destination);
	        return destination;
	    }
	}
}
